#!/usr/bin/env ruby
require 'json'
require_relative '../lib/query_parser.rb'
require_relative '../lib/css_writer.rb'

# Generate a CSS file with rules for finding team members
class Generate
  def initialize
    @root = File.join(File.expand_path(File.dirname(__FILE__)), '..')
    people = JSON.parse(File.open("#{@root}/data/members.json").read)
    @people = people.map do |person|
      
      image = 'https://www.algolia.com/static_assets/images/' \
               "about-#{person['short_name']}.jpg"
      person['image'] = CSSWriter.cloudinary(image)
      person
    end
  end
  #
  # def fulltext_find
  #   css = []
  #   @people.each do |person|
  #     name = person[:name].downcase
  #     start = 0
  #     max = name.length
  #     while start < max
  #       before = name[0..start]
  #       after = name[start + 1..-1]
  #       image = cloudinary_image(person[:image])
  #
  #       css << ".searchbar[value='#{before}'] + div {"\
  #              "background-image: url(#{image}); }"
  #       css << ".searchbar[value='#{before}'] + div:before {"\
  #              "content: '#{before}'; }"
  #       css << ".searchbar[value='#{before}'] + div:after {"\
  #              "content: '#{after}'; }"
  #       start += 1
  #     end
  #   end
  # end

  def run
    # lookup_table = 
    lookup_table = {}
    @people.each do |person|
      entry_table = QueryParser.index(person, keyword: person['name'])
      lookup_table = QueryParser.merge(lookup_table, entry_table)
    end

    css = CSSWriter.base
    css = CSSWriter.preload_images(css, @people)
    lookup_table.each do |prefix, entry|
      css.push(CSSWriter.rule(prefix, entry))
    end


    File.write("#{@root}/public/generated.css", css.join("\n"))
  end
end
Generate.new.run
